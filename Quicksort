import java.util.Scanner;

public class Quicksort {

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int[] A = new int[9];
		for(int i = 0;i<9;i++){ 
			A[i] = in.nextInt();
		}
		quicksort(A,0,8);
		for(int i = 0;i<9;i++){
			System.out.print(A[i]+" ");
		}

	}
	public static int parttition(int[] A,int p,int r){  //在p与R中将小于A[r]中的房子A[r]的左边，大于A[r]的放在A[r]的右边，返回A[r]的新位置
		int x = A[r];
		int i = p-1;
		for(int j = p;j<=r-1;j++){
			if(A[j] <= x){  //如果A[j] < A[r] 将A[j]与A[i+1]互换位置，
				i=i+1;
			    int a  = A[i];
			    A[i] = A[j];
			    A[j] = a;
			}
		}
		int temp = A[i+1];
		A[i+1] = A[r];
		A[r] = temp;
		return i+1;		
	}
	public static void quicksort(int[] A,int p,int r){
		if(p<r){
			int q = parttition(A, p, r);
			quicksort(A, p, q-1);
			quicksort(A, q+1, r);
		}
		return;
	}
}
